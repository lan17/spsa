#summary Scalar field Volume Renderer

Lev has worked on this project in the summer of 2008. It is for visualizing scalar volume data.

features include:
  * Uses Java OpenGL and webstart. This means it can be run on a wide variety of OS from a single .jnlp/jar file.
  * Load binary floating point values files (that represent a 3d array) and visualize them using OpenGL's 3D texture feature.
  * Use Gaussian Shader (GLSL) to choose mean and standard deviation to isolate a certain range in the data to visualize. Note that this reefers to normalized data that is between [0,1].
  * Use linear shader to color different data regions with gradually different colors for more colorful pictures. (You cannot control the gradient right now. I should probably build it in).
  * Create iso-surfaces using marching cubes algorithm around the mean and standard deviation you chose in gaussian shader. This works pretty fast, but contains some bugs, specifically sometimes the direction of normal vectors are reveresed, producing undesirable effects. (I haven't figured out how to fix this problem yet.)
  * Use fixed function or per-pixel phong shading on generated surfaces. 

|| human head using linear shader || <a href=http://spsa.googlecode.com/files/head_linear.jpg><img src=http://spsa.googlecode.com/files/head_linear.jpg width=640 height=400></a> || 