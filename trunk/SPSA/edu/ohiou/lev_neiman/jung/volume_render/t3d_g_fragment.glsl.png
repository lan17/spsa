
uniform sampler3D tex3D;

uniform float scale_factor; 
uniform float gauss_b; 
uniform float gauss_c; 

const vec3 zero = vec3(0.0, 0.0, 0.0);
const vec3 one = vec3(1.0, 1.0, 1.0);

void main(void)
{
	float v = texture3D(tex3D, gl_TexCoord[0].stp).r;
  
   if (any(lessThan(gl_TexCoord[0].stp, zero)) || any(greaterThan(gl_TexCoord[0].stp, one))) discard;
   
   float exponent = v - gauss_b;
   exponent *= exponent;
   exponent /= -2.0 *( gauss_c * gauss_c );
   float nv = exp( exponent );

  float per = 20.0;
   
    float fc = cos(nv*per)*.5 + .5;
    float fv = sin(nv*per)+.5 + .5;
    float fb = 1.0;

  float new_alpha = log( v*nv + 1.0 ) * scale_factor;
    //float new_alpha = nv * scale_factor;
   gl_FragColor = vec4( 1, v, 1-v, new_alpha);
}