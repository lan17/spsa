uniform float scale_factor;
uniform sampler3D tex3D;
varying vec4 colorz;

const vec3 zero = vec3(0.0, 0.0, 0.0);
const vec3 one = vec3(1.0, 1.0, 1.0);

void main(void)
{

   float v = texture3D(tex3D, gl_TexCoord[0].stp).r;
if( v < .1 ) discard;

   float val;
   if (any(lessThan(gl_TexCoord[0].stp, zero)) || any(greaterThan(gl_TexCoord[0].stp, one))) discard;
    
    float per = 10.0;
    float nv = v;
    float fc = cos(nv*per)*.5 + .5;
    float fv = sin(nv*per)+.5 + .5;
    float fb = 1.0 - log(fc*fv+1.0);
   gl_FragColor = vec4( normalize((vec3(fc,fv,fb))), scale_factor * log( v + 1.0 ) );
}